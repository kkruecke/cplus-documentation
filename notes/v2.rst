template<class... Ts> struct tuple; //Forward reference

    // Template specializtion for empty list of template arguments, the base struct of the recursive tuple data structure.
    template<> struct tuple<> { 
    
        tuple()
        {
  	    std::cout << "In template<> tuple<>::tuple() constructor, which has NO member tail." << std::endl;
        }
    }; 
    
    template<class T, class... Ts> struct tuple<T, Ts...> : tuple<Ts...> { 
    
        template<class Arg1, class... Args> tuple(Arg1&& arg1, Args &&...args)
        {
            std::cout << "  In constructor for " <<  __PRETTY_FUNCTION__ << " where tail = " << tail << std::endl;
        }
    
        T tail;
    };
    



template <typename CL, typename… CArgs> _tuple_recurr_base(CL &&arg, CArgs &&… args) 
